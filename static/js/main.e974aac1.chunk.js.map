{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","imgUrlPattern","imdbUrlPattern","imdbIdPattern","NewMovie","onAddMovie","useState","state","setState","errorForTitle","errorForImgUrl","errorForImdbUrl","errorForImdbId","error","setError","isFormValid","test","onSubmit","e","preventDefault","htmlFor","id","type","classNames","placeholder","value","onChange","prev","target","onBlur","name","cols","rows","isValidImgUrl","isValidImdbUrl","isValidImdbId","form__button","disabled","App","moviesFromServer","addMovie","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e974aac1.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\n// eslint-disable-next-line max-len\nconst imgUrlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\nconst imdbUrlPattern = /^[\\w]{3,9}:(?:\\/\\/)www\\.imdb\\.com\\/title\\/\\w{2}\\d{7}$/;\nconst imdbIdPattern = /^\\w{2}\\d{7}$/;\n\nexport const NewMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [state, setState] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [error, setError] = useState({\n    errorForTitle: '',\n    errorForImgUrl: '',\n    errorForImdbUrl: '',\n    errorForImdbId: '',\n  });\n\n  const isFormValid = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = state;\n\n    return title\n      && imdbUrl\n      && imdbUrl\n      && imdbId\n      && imgUrlPattern.test(imgUrl)\n      && imdbUrlPattern.test(imdbUrl)\n      && imdbIdPattern.test(imdbId);\n  };\n\n  const submitForm: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = state;\n\n    if (isFormValid()) {\n      onAddMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  const isValidImgUrl = () => {\n    const { imgUrl } = state;\n\n    return imgUrl || imgUrlPattern.test(imgUrl);\n  };\n\n  const isValidImdbUrl = () => {\n    const { imdbUrl } = state;\n\n    return imdbUrl || imdbUrlPattern.test(imdbUrl);\n  };\n\n  const isValidImdbId = () => {\n    const { imdbId } = state;\n\n    return imdbId || imdbIdPattern.test(imdbId);\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={submitForm}\n    >\n      <label htmlFor=\"title\" className=\"form__label\">\n        <input\n          id=\"title\"\n          type=\"text\"\n          className={classNames(\n            'form__input',\n            { 'form__input-error': error.errorForTitle === '*Enter a title' },\n          )}\n          placeholder=\"Movie name\"\n          value={state.title}\n          onChange={(e) => {\n            setState(prev => ({ ...prev, title: e.target.value }));\n            setError(prev => ({ ...prev, errorForTitle: '' }));\n          }}\n          onBlur={() => (\n            !state.title\n            && setError(prev => ({\n              ...prev, errorForTitle: '*Enter a title',\n            }))\n          )}\n        />\n        <span className=\"form__span\">\n          {error.errorForTitle}\n        </span>\n      </label>\n\n      <label htmlFor=\"description\" className=\"form__label\">\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          className=\"form__textarea\"\n          placeholder=\"Movie description (optional)\"\n          value={state.description}\n          cols={55}\n          rows={5}\n          onChange={(e) => {\n            setState(prev => ({ ...prev, description: e.target.value }));\n          }}\n        />\n      </label>\n\n      <label htmlFor=\"imgUrl\" className=\"form__label\">\n        <input\n          id=\"imgUrl\"\n          type=\"text\"\n          className={classNames(\n            'form__input',\n            {\n              'form__input-error': error.errorForImgUrl\n                === '*Enter a valid image URL',\n            },\n          )}\n          placeholder=\"Image URL\"\n          value={state.imgUrl}\n          onChange={(e) => {\n            setState(prev => ({ ...prev, imgUrl: e.target.value }));\n            setError(prev => ({\n              ...prev, errorForImgUrl: '',\n            }));\n          }}\n          onBlur={() => (\n            !isValidImgUrl()\n            && setError(prev => ({\n              ...prev, errorForImgUrl: '*Enter a valid image URL',\n            }))\n          )}\n        />\n        <span className=\"form__span\">\n          {error.errorForImgUrl}\n        </span>\n      </label>\n\n      <label htmlFor=\"imdbUrl\" className=\"form__label\">\n        <input\n          id=\"imdbUrl\"\n          type=\"text\"\n          className={classNames(\n            'form__input',\n            {\n              'form__input-error': error.errorForImdbUrl\n                === '*Enter a valid imdb URL',\n            },\n          )}\n          placeholder=\"Imdb URL\"\n          value={state.imdbUrl}\n          onChange={(e) => {\n            setState(prev => ({ ...prev, imdbUrl: e.target.value }));\n            setError(prev => ({ ...prev, errorForImdbUrl: '' }));\n          }}\n          onBlur={() => (\n            !isValidImdbUrl()\n            && setError(prev => ({\n              ...prev, errorForImdbUrl: '*Enter a valid imdb URL',\n            }))\n          )}\n        />\n        <span className=\"form__span\">\n          {error.errorForImdbUrl}\n        </span>\n      </label>\n\n      <label htmlFor=\"imdbId\" className=\"form__label\">\n        <input\n          id=\"imdbId\"\n          type=\"text\"\n          className={classNames(\n            'form__input',\n            {\n              'form__input-error': error.errorForImdbId\n                === '*Enter a valid imdb ID',\n            },\n          )}\n          placeholder=\"Imdb ID\"\n          value={state.imdbId}\n          onChange={(e) => {\n            setState(prev => ({ ...prev, imdbId: e.target.value }));\n            setError(prev => ({ ...prev, errorForImdbId: '' }));\n          }}\n          onBlur={() => (\n            !isValidImdbId()\n            && setError(prev => ({\n              ...prev, errorForImdbId: '*Enter a valid imdb ID',\n            }))\n          )}\n        />\n        <span className=\"form__span\">\n          {error.errorForImdbId}\n        </span>\n      </label>\n\n      <button\n        type=\"submit\"\n        className={classNames(\n          'form__button--not-active',\n          { form__button: isFormValid() },\n        )}\n        disabled={!isFormValid()}\n      >\n        Add a new movie\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAddMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}